setwd("/home/shaam/Pri/R/aio-stoomreinigers-nl/")
# Functie Packlib - laden libaries en wanneer package niet beschikbaar is installeren
inladen <- function(x){
for( i in x ){
#  require returns TRUE invisibly if it was able to load package
if( ! require( i , character.only = TRUE ) ){
#  If package was not able to be loaded then re-install
install.packages( i , dependencies = TRUE )
#  Load package after installing
require( i , character.only = TRUE )
}
}
}
# Definieer benodigde pakketten
benodigde_packages  <- c("foreign",
"NLP",
"scales",
"tidyverse",
"caret",
"e1071",
"tm",
"readxl",
"lubridate",
"ggmap",
"ggplot2",
"devtools",
"RDSTK",
"rgdal")
#if(!requireNamespace("devtools")) install.packages("devtools")
devtools::install_github("dkahle/ggmap", ref = "tidyup")
# Installeren / inladen van de gebruikte libraries
inladen(benodigde_packages)
install.packages(RDSTK)
install.packages("RDSTK")
install.packages(RDSTK)
setwd("/home/shaam/Pri/R/aio-stoomreinigers-nl/")
# Functie Packlib - laden libaries en wanneer package niet beschikbaar is installeren
inladen <- function(x){
for( i in x ){
#  require returns TRUE invisibly if it was able to load package
if( ! require( i , character.only = TRUE ) ){
#  If package was not able to be loaded then re-install
install.packages( i , dependencies = TRUE )
#  Load package after installing
require( i , character.only = TRUE )
}
}
}
# Definieer benodigde pakketten
benodigde_packages  <- c("foreign",
"NLP",
"scales",
"tidyverse",
"caret",
"e1071",
"tm",
"readxl",
"lubridate",
"ggmap",
"ggplot2",
"devtools",
"RDSTK",
"rgdal")
#if(!requireNamespace("devtools")) install.packages("devtools")
devtools::install_github("dkahle/ggmap", ref = "tidyup")
# Installeren / inladen van de gebruikte libraries
inladen(benodigde_packages)
# Even opruimen
rm(benodigde_packages, inladen)
#ken variable toe aan te verwerken data
#door variabeles te gebruiken wordt code herbruikbaar voor toekomstige data frames
pad_2_data_dh_2006_2015 <- "/home/shaam/Pri/R/eindopdr8_R/eindopr8/ongevallen_dh_2006_2015.csv"
#inlezen geregistreerde	ongevallen in 2014 van website en 1 variabele aan toekennen
#om hoofdonderzoeksvraag te beantwoorde:
#aantal	verkeersongevallen	binnen	de	gemeente	den haag te	verminderen
ongevallen_dh_2006_2015 <- read.csv(pad_2_data_dh_2006_2015, header = TRUE, sep = ",")
#datum naar datum formaat jjjjmmdd
datum2jjjjmmdd_ongeval_dh_2006_2015 <- ymd(ongevallen_dh_2006_2015$Datum)
#reken weeknr uit datum_jjjj_dd_mm_formaat
weeknr_ongeval_dh_2006_2015 <- isoweek(datum2jjjjmmdd_ongeval_dh_2006_2015)
#weeknr toevoegen aan originele data frame
ongevallen_dh_2006_2015 <- ongevallen_dh_2006_2015 %>% mutate(weeknr_ongeval_dh_2006_2015)
#Zet datum om naar dag van de week met zondag zijnde 1ste dag van week
ongevallen_dh_2006_2015_Dag <- factor(ongevallen_dh_2006_2015$Dag ,levels= c("ZO", "MA", "DI", "WO", "DO", "VR", "ZA")) # analyse per dag
#Datum splitsen in Jaar-Maand-Dag
ongevallen_dh_2006_2015 <- select(ongevallen_dh_2006_2015, everything()) %>%
separate(Datum, into = c("Jaar", "MaandDag"), remove = FALSE, sep = 4) %>%
separate(MaandDag, into = c("Maand", "Dag van de maand"), remove = TRUE, sep = 2)
#Visualiseer locatie omgelukken 2006 t/m 2015
register_google(key = "AIzaSyC0ewYIpxMCOQjwhbmiaKGMr2LE2ITloao")
#map_dh <- get_map(location = "the hague", zoom = 12, scale = 2, maptype = "satellite")
map_dh <- get_googlemap("The Hague, The Netherlands",zoom = 10, size = c(640, 640), scale = 2) %>% ggmap()
map_dh <- get_map(location = "the hague", zoom = 12, scale = 2, maptype = "satellite")
?get_map
map_dh <- get_map(location = c("the hague"), zoom = 12, scale = 2, maptype = "satellite")
map_dh <- get_map(location = c("texas"), zoom = 12, scale = 2, maptype = "satellite")
map_dh <- get_map(location = c("houston texas"), zoom = 12, scale = 2, maptype = "satellite")
#Visualiseer locatie omgelukken 2006 t/m 2015
register_google(key = "AIzaSyC0ewYIpxMCOQjwhbmiaKGMr2LE2ITloao")
map_dh <- get_map(location = c("houston texas"), zoom = 12, scale = 2, maptype = "satellite")
google_day_limit()
google_key()
map_dh <- get_map(location = c("houston, texas"), zoom = 12, scale = 2, maptype = "satellite")
map_dh <- get_map(location = "houston, texas", zoom = 12, scale = 2, maptype = "satellite")
map_dh <- get_map(location = "houston", zoom = 12, scale = 2, maptype = "satellite")
map_dh <- get_map(location = "houston texas", zoom = 12, scale = 2, maptype = "satellite")
map_dh <- get_map(location = "houston, texas", zoom = 12, scale = 2, maptype = "satellite")
